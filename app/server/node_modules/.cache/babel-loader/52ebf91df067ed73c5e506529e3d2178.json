{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\floating-bridges\\\\floating-bridges\\\\floating-bridges\\\\app\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst suits = [\"clubs\", \"diamonds\", \"hearts\", \"spades\"];\nconst numbers = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'jack', 'queen', 'king', 'ace'];\nexport const Card = props => {\n  //const path = \"./sprites/\" + numbers[props.num] + \"_of_\" + suits[props.suit] + \".png\"\n  const cardName = numbers[props.num] + \" of \" + suits[props.suit];\n  const cardImages = [[require(\"./sprites/2_of_clubs.png\"), require(\"./sprites/3_of_clubs.png\"), require(\"./sprites/4_of_clubs.png\"), require(\"./sprites/5_of_clubs.png\"), require(\"./sprites/6_of_clubs.png\"), require(\"./sprites/7_of_clubs.png\"), require(\"./sprites/8_of_clubs.png\"), require(\"./sprites/9_of_clubs.png\"), require(\"./sprites/10_of_clubs.png\"), require(\"./sprites/jack_of_clubs2.png\"), require(\"./sprites/queen_of_clubs2.png\"), require(\"./sprites/king_of_clubs2.png\"), require(\"./sprites/ace_of_clubs.png\")], [require(\"./sprites/2_of_diamonds.png\"), require(\"./sprites/3_of_diamonds.png\"), require(\"./sprites/4_of_diamonds.png\"), require(\"./sprites/5_of_diamonds.png\"), require(\"./sprites/6_of_diamonds.png\"), require(\"./sprites/7_of_diamonds.png\"), require(\"./sprites/8_of_diamonds.png\"), require(\"./sprites/9_of_diamonds.png\"), require(\"./sprites/10_of_diamonds.png\"), require(\"./sprites/jack_of_diamonds2.png\"), require(\"./sprites/queen_of_diamonds2.png\"), require(\"./sprites/king_of_diamonds2.png\"), require(\"./sprites/ace_of_diamonds.png\")], [require(\"./sprites/2_of_hearts.png\"), require(\"./sprites/3_of_hearts.png\"), require(\"./sprites/4_of_hearts.png\"), require(\"./sprites/5_of_hearts.png\"), require(\"./sprites/6_of_hearts.png\"), require(\"./sprites/7_of_hearts.png\"), require(\"./sprites/8_of_hearts.png\"), require(\"./sprites/9_of_hearts.png\"), require(\"./sprites/10_of_hearts.png\"), require(\"./sprites/jack_of_hearts2.png\"), require(\"./sprites/queen_of_hearts2.png\"), require(\"./sprites/king_of_hearts2.png\"), require(\"./sprites/ace_of_hearts.png\")], [require(\"./sprites/2_of_spades.png\"), require(\"./sprites/3_of_spades.png\"), require(\"./sprites/4_of_spades.png\"), require(\"./sprites/5_of_spades.png\"), require(\"./sprites/6_of_spades.png\"), require(\"./sprites/7_of_spades.png\"), require(\"./sprites/8_of_spades.png\"), require(\"./sprites/9_of_spades.png\"), require(\"./sprites/10_of_spades.png\"), require(\"./sprites/jack_of_spades2.png\"), require(\"./sprites/queen_of_spades2.png\"), require(\"./sprites/king_of_spades2.png\"), require(\"./sprites/ace_of_spades2.png\")]];\n\n  const hiddenCard = require(\"./sprites/back.png\");\n\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: props.hidden ? hiddenCard : cardImages[props.suit][props.num],\n    alt: cardName,\n    className: props.hidden ? \"card-hidden\" : props.selected ? \"card-selected\" : \"card\",\n    onClick: props.handleClick\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = Card;\nexport const Hand = props => {\n  const getSuit = card => {\n    console.log(props.cardLst);\n    return Math.floor(card / 13);\n  };\n\n  const getNumber = card => {\n    return card % 13;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex-display\",\n    children: [props.cardLst.map((val, i) => /*#__PURE__*/_jsxDEV(Card, {\n      suit: getSuit(val),\n      num: getNumber(val),\n      hidden: false,\n      selected: props.selLst[i],\n      handleClick: () => props.handleClickCard(i)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: props.handleClickSubmit,\n      children: \"Confirm!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Hand;\nexport const OthHand = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.side === 1 ? \"flex-other-hand-1\" : props.side === 2 ? \"flex-other-hand-2\" : \"flex-other-hand-3\",\n    children: Array(props.numCards).fill(69420).map((val, i) => /*#__PURE__*/_jsxDEV(Card, {\n      suit: 0,\n      num: 0,\n      hidden: true,\n      selected: false,\n      handleClick: () => {}\n    }, i + props.side * 13, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_c3 = OthHand;\nexport const OthHandSide = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.side === 1 ? \"flex-other-hand-1\" : props.side === 2 ? \"flex-other-hand-2\" : \"flex-other-hand-3\",\n    children: Array(props.numCards).fill(69420).map((val, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: require(\"./sprites/back_rot.png\"),\n      alt: \"Empty Card\",\n      className: \"card-hidden-rot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_c4 = OthHandSide;\n\n/* I know that this is very bad coding practice, but bear with me here. All the functions that have to do with \r\n * the gameplay of the app will be situated here. To toggle between sections, just search the word `PAGEBREAK`*/\nfunction App() {\n  _s();\n\n  /** PAGEBREAK Functions that have to do with initializing the players cards **/\n  var playerNum = 1; //TODO should be const: init when establishing multiplayer\n\n  const shuffle = array => {\n    let currentIndex = array.length,\n        randomIndex; // While there remain elements to shuffle...\n\n    while (currentIndex != 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--; // And swap it with the current element.\n\n      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];\n    }\n\n    return array;\n  };\n\n  const genCards = () => {\n    console.log(\"generating cards!\");\n    var allCards = Array.from(Array(52).keys());\n    allCards = shuffle(allCards);\n    var cardList1 = allCards.slice(0, 13);\n    var cardList2 = allCards.slice(13, 26);\n    var cardList3 = allCards.slice(26, 39);\n    var cardList4 = allCards.slice(39, 52);\n    cardList1 = cardList1.sort((a, b) => a - b);\n    cardList2 = cardList2.sort((a, b) => a - b);\n    cardList3 = cardList3.sort((a, b) => a - b);\n    cardList4 = cardList4.sort((a, b) => a - b);\n    /*console.log(cardList1)\r\n    console.log(cardList2)\r\n    console.log(cardList3)\r\n    console.log(cardList4)*/\n\n    return [cardList1, cardList2, cardList3, cardList4];\n  };\n  /** States and Functions which have to do with the user's hand **/\n\n\n  const [cardList, setCardList] = useState(genCards()[playerNum] //[...cardInitList]\n  );\n  const [selLst, setSelLst] = useState(Array(cardList.length).fill(false));\n  const [numCards, setNumCards] = useState(13);\n\n  const updateSelected = cardNum => {\n    // If neg, we treat it as remove 1 \n    if (cardNum < 0) {\n      setSelLst(prev => {\n        for (var i in prev) {\n          prev[i] = false;\n        }\n\n        prev.splice(0, 1);\n        return [...prev];\n      });\n    }\n\n    setSelLst(prev => {\n      for (var i in prev) {\n        prev[i] = false;\n      }\n\n      prev[cardNum] = true;\n      return [...prev];\n    });\n  };\n\n  const handleClickCard = index => {\n    console.log(\"Card \" + index + \" was clicked!!\");\n    updateSelected(index);\n    console.log(selLst);\n  };\n\n  const checkValidCard = (cardToPlay, trump, breakTrump, firstCard, hand) => {\n    // We define the params as follows:\n    // cardToPlay: the card which we wish to check the legality of.\n    // trump: the trump suit \n    // breakTrump: whether the trump has been broken yet or not. \n    // firstCard: the firstCard played. If the current player is to play the next card, this value will be negative\n    const cardToPlaySuit = Math.floor(cardToPlay / 13);\n\n    if (firstCard < 0) {\n      //current player is to play the next card\n      if (breakTrump) return true;else {\n        return cardToPlaySuit !== trump;\n      }\n    } else {\n      const firstCardSuit = Math.floor(firstCard / 13);\n      if (cardToPlaySuit === firstCardSuit) return true;else {\n        //the suit is different! Check for other cards in the hand which are legal. \n        for (var i = 0; i < hand.length; ++i) {\n          if (Math.floor(hand[i] / 13) === firstCardSuit) return false;\n        }\n\n        return true;\n      }\n    }\n  }; // This function removes the selected card, if any, and outputs the card num of the removed card. \n  // TODO this function will have to be changed to communicate with the server\n\n\n  const handleClickSubmit = () => {\n    console.log(\"Calling handle Click Submit!!!!\");\n    var selected = -1;\n\n    for (var i = 0; i < selLst.length; ++i) {\n      if (selLst[i]) selected = i;\n    }\n\n    console.log(\"Card \" + selected + \" is going to be deleted!\");\n    console.log(cardList);\n\n    if (selected === -1) {\n      // eslint-disable-next-line no-restricted-globals\n      confirm(\"Please Select a Card!\");\n      return -1;\n    } else if (!checkValidCard(cardList[selected], 0, true, -1, cardList)) {\n      // eslint-disable-next-line no-restricted-globals\n      confirm(\"This card is not legal to play!\");\n      return -1;\n    } else {\n      const cardRemoved = cardList[selected];\n      setCardList(prev => {\n        if (prev.length === numCards) {\n          prev.splice(selected, 1);\n          console.log(prev);\n          setNumCards(prev => {\n            return prev - 1;\n          });\n          updateSelected(-1);\n          return [...prev];\n        }\n\n        return prev;\n      });\n      console.log(\"End of handleClickSubmit [\" + cardList + \"] (length \" + cardList.length + \")\");\n      return cardRemoved;\n    }\n  };\n  /** The other players info. Again, this will need to be updated when you start building the server. **/\n\n  /** PAGEBREAK return statement **/\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Hand, {\n      cardLst: cardList,\n      selLst: selLst,\n      playerNum: playerNum,\n      handleClickCard: handleClickCard,\n      handleClickSubmit: handleClickSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OthHand, {\n      side: 2,\n      numCards: 13\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OthHandSide, {\n      side: 1,\n      numCards: 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OthHandSide, {\n      side: 3,\n      numCards: 13\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"psDlQ7unxvoARL6MXS+7Wic9JvA=\");\n\n_c5 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Card\");\n$RefreshReg$(_c2, \"Hand\");\n$RefreshReg$(_c3, \"OthHand\");\n$RefreshReg$(_c4, \"OthHandSide\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"sources":["C:/Users/admin/Desktop/floating-bridges/floating-bridges/floating-bridges/app/src/App.tsx"],"names":["React","useState","suits","numbers","Card","props","cardName","num","suit","cardImages","require","hiddenCard","hidden","selected","handleClick","Hand","getSuit","card","console","log","cardLst","Math","floor","getNumber","map","val","i","selLst","handleClickCard","handleClickSubmit","OthHand","side","Array","numCards","fill","OthHandSide","App","playerNum","shuffle","array","currentIndex","length","randomIndex","random","genCards","allCards","from","keys","cardList1","slice","cardList2","cardList3","cardList4","sort","a","b","cardList","setCardList","setSelLst","setNumCards","updateSelected","cardNum","prev","splice","index","checkValidCard","cardToPlay","trump","breakTrump","firstCard","hand","cardToPlaySuit","firstCardSuit","confirm","cardRemoved"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\r\nimport cards from './cards.gif';\r\nimport './App.css';\r\nimport React, { FC, useState } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nconst suits = [\"clubs\", \"diamonds\", \"hearts\", \"spades\"]\r\nconst numbers = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'jack', 'queen', 'king', 'ace']\r\n\r\ninterface CardProps {\r\n  suit: number, //heart, dim, club, spade\r\n  num: number, //2 to Ace\r\n  hidden: boolean,\r\n  selected:boolean,\r\n  handleClick: () => void,\r\n  key: number, //position number\r\n}\r\n\r\nexport const Card: FC<CardProps> = (props) => {\r\n  //const path = \"./sprites/\" + numbers[props.num] + \"_of_\" + suits[props.suit] + \".png\"\r\n  const cardName = numbers[props.num] + \" of \" + suits[props.suit]\r\n\r\n  const cardImages = [[require(\"./sprites/2_of_clubs.png\"), require(\"./sprites/3_of_clubs.png\"), require(\"./sprites/4_of_clubs.png\"), require(\"./sprites/5_of_clubs.png\"), require(\"./sprites/6_of_clubs.png\"), require(\"./sprites/7_of_clubs.png\"), require(\"./sprites/8_of_clubs.png\"), require(\"./sprites/9_of_clubs.png\"), require(\"./sprites/10_of_clubs.png\"), require(\"./sprites/jack_of_clubs2.png\"), require(\"./sprites/queen_of_clubs2.png\"), require(\"./sprites/king_of_clubs2.png\"), require(\"./sprites/ace_of_clubs.png\")]\r\n                    , [require(\"./sprites/2_of_diamonds.png\"), require(\"./sprites/3_of_diamonds.png\"), require(\"./sprites/4_of_diamonds.png\"), require(\"./sprites/5_of_diamonds.png\"), require(\"./sprites/6_of_diamonds.png\"), require(\"./sprites/7_of_diamonds.png\"), require(\"./sprites/8_of_diamonds.png\"), require(\"./sprites/9_of_diamonds.png\"), require(\"./sprites/10_of_diamonds.png\"), require(\"./sprites/jack_of_diamonds2.png\"), require(\"./sprites/queen_of_diamonds2.png\"), require(\"./sprites/king_of_diamonds2.png\"), require(\"./sprites/ace_of_diamonds.png\")]\r\n                    , [require(\"./sprites/2_of_hearts.png\"), require(\"./sprites/3_of_hearts.png\"), require(\"./sprites/4_of_hearts.png\"), require(\"./sprites/5_of_hearts.png\"), require(\"./sprites/6_of_hearts.png\"), require(\"./sprites/7_of_hearts.png\"), require(\"./sprites/8_of_hearts.png\"), require(\"./sprites/9_of_hearts.png\"), require(\"./sprites/10_of_hearts.png\"), require(\"./sprites/jack_of_hearts2.png\"), require(\"./sprites/queen_of_hearts2.png\"), require(\"./sprites/king_of_hearts2.png\"), require(\"./sprites/ace_of_hearts.png\")]\r\n                    , [require(\"./sprites/2_of_spades.png\"), require(\"./sprites/3_of_spades.png\"), require(\"./sprites/4_of_spades.png\"), require(\"./sprites/5_of_spades.png\"), require(\"./sprites/6_of_spades.png\"), require(\"./sprites/7_of_spades.png\"), require(\"./sprites/8_of_spades.png\"), require(\"./sprites/9_of_spades.png\"), require(\"./sprites/10_of_spades.png\"), require(\"./sprites/jack_of_spades2.png\"), require(\"./sprites/queen_of_spades2.png\"), require(\"./sprites/king_of_spades2.png\"), require(\"./sprites/ace_of_spades2.png\")]]\r\n\r\n  const hiddenCard = require(\"./sprites/back.png\")\r\n\r\n  return (\r\n    <img src={props.hidden ? hiddenCard : cardImages[props.suit][props.num]} alt={cardName} \r\n    className={props.hidden ? \"card-hidden\" : props.selected ? \"card-selected\" : \"card\"} onClick={props.handleClick}/>\r\n  );\r\n  \r\n}\r\n\r\ninterface HandProps {\r\n  cardLst: number[]\r\n  selLst: boolean[]\r\n  playerNum: number\r\n  handleClickCard: (index:number) => void\r\n  handleClickSubmit: () => number  \r\n}\r\n\r\nexport const Hand:FC<HandProps> = (props) => {\r\n  const getSuit = (card:number) => {\r\n    console.log(props.cardLst)\r\n    return Math.floor(card/13)\r\n  }\r\n\r\n  const getNumber = (card:number) => {\r\n    return card%13\r\n  }\r\n\r\n  return (\r\n    <div className='flex-display'>\r\n      {props.cardLst.map((val, i) => \r\n        <Card \r\n          suit={getSuit(val)} \r\n          num={getNumber(val)} \r\n          hidden={false} \r\n          selected={props.selLst[i]} \r\n          handleClick={() => props.handleClickCard(i)}\r\n          key={i}\r\n        />\r\n      )}\r\n      <button type=\"button\" onClick={props.handleClickSubmit}>\r\n        Confirm!\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface OthHandProps {\r\n  numCards: number\r\n  side: number //1 for left, 2 for top, 3 for right\r\n}\r\n\r\nexport const OthHand:FC<OthHandProps> = (props) => {\r\n  return (\r\n    <div className={\r\n      (props.side === 1) ? \"flex-other-hand-1\" : (props.side === 2) ? \"flex-other-hand-2\" : \"flex-other-hand-3\"\r\n    }>\r\n      {Array(props.numCards).fill(69420).map((val, i) => \r\n        <Card \r\n          suit={0} \r\n          num={0} \r\n          hidden={true} \r\n          selected={false} \r\n          handleClick={() => {}}\r\n          key={i + props.side*13}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface OthHandPropsSide {\r\n  numCards: number\r\n  side: number //1 for left, 2 for top, 3 for right\r\n}\r\n\r\nexport const OthHandSide:FC<OthHandPropsSide> = (props) => {\r\n  return (\r\n    <div className={\r\n      (props.side === 1) ? \"flex-other-hand-1\" : (props.side === 2) ? \"flex-other-hand-2\" : \"flex-other-hand-3\"\r\n    }>\r\n      {Array(props.numCards).fill(69420).map((val, i) => \r\n        <img src={require(\"./sprites/back_rot.png\")} alt={\"Empty Card\"} \r\n        className={\"card-hidden-rot\"}/>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\ntype cardSelected = boolean\r\n\r\n/* I know that this is very bad coding practice, but bear with me here. All the functions that have to do with \r\n * the gameplay of the app will be situated here. To toggle between sections, just search the word `PAGEBREAK`*/\r\nfunction App() {\r\n  /** PAGEBREAK Functions that have to do with initializing the players cards **/\r\n  var playerNum = 1 //TODO should be const: init when establishing multiplayer\r\n\r\n  const shuffle = (array:number[]) => {\r\n    let currentIndex = array.length,  randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (currentIndex != 0) {\r\n\r\n      // Pick a remaining element...\r\n      randomIndex = Math.floor(Math.random() * currentIndex);\r\n      currentIndex--;\r\n\r\n      // And swap it with the current element.\r\n      [array[currentIndex], array[randomIndex]] = [\r\n        array[randomIndex], array[currentIndex]];\r\n    }\r\n\r\n    return array;\r\n  }\r\n\r\n  const genCards = () => {\r\n    console.log(\"generating cards!\")\r\n    var allCards = Array.from(Array(52).keys())\r\n    allCards = shuffle(allCards)\r\n    var cardList1 = allCards.slice(0,13)\r\n    var cardList2 = allCards.slice(13,26)\r\n    var cardList3 = allCards.slice(26,39)\r\n    var cardList4 = allCards.slice(39,52)\r\n    cardList1 = cardList1.sort((a, b) => a - b)\r\n    cardList2 = cardList2.sort((a, b) => a - b)\r\n    cardList3 = cardList3.sort((a, b) => a - b)\r\n    cardList4 = cardList4.sort((a, b) => a - b)\r\n\r\n    /*console.log(cardList1)\r\n    console.log(cardList2)\r\n    console.log(cardList3)\r\n    console.log(cardList4)*/\r\n\r\n    return [cardList1, cardList2, cardList3, cardList4]\r\n  }\r\n\r\n  /** States and Functions which have to do with the user's hand **/\r\n  const [cardList, setCardList] = useState<number[]>(\r\n    genCards()[playerNum] \r\n    //[...cardInitList]\r\n  )\r\n  \r\n  const [selLst, setSelLst] = useState<cardSelected[]>(\r\n    Array(cardList.length).fill(false)\r\n  )\r\n\r\n  const [numCards, setNumCards] = useState<number>(13)\r\n\r\n  const updateSelected = (cardNum: number) => {\r\n    // If neg, we treat it as remove 1 \r\n    if (cardNum < 0){\r\n      setSelLst((prev) => {\r\n        for (var i in prev){\r\n          prev[i] = false\r\n        }\r\n        prev.splice(0,1)\r\n        return [...prev]\r\n      })\r\n    }\r\n\r\n    setSelLst((prev) => {\r\n      for (var i in prev){\r\n        prev[i] = false\r\n      }\r\n      prev[cardNum] = true\r\n      return [...prev]\r\n    })\r\n  }\r\n  \r\n  const handleClickCard = (index:number) => {\r\n    console.log(\"Card \" + index + \" was clicked!!\")\r\n    updateSelected(index)\r\n    console.log(selLst)\r\n  }\r\n\r\n  const checkValidCard = (cardToPlay:number, trump:number, breakTrump:boolean, firstCard:number, hand:number[]) => {\r\n    // We define the params as follows:\r\n    // cardToPlay: the card which we wish to check the legality of.\r\n    // trump: the trump suit \r\n    // breakTrump: whether the trump has been broken yet or not. \r\n    // firstCard: the firstCard played. If the current player is to play the next card, this value will be negative\r\n\r\n    const cardToPlaySuit = Math.floor(cardToPlay/13)\r\n\r\n    if (firstCard < 0){\r\n      //current player is to play the next card\r\n      if (breakTrump) return true\r\n      else {\r\n        return (cardToPlaySuit !== trump)\r\n      }\r\n    }\r\n    else{\r\n      const firstCardSuit = Math.floor(firstCard/13)\r\n      if (cardToPlaySuit === firstCardSuit) return true\r\n      else{\r\n        //the suit is different! Check for other cards in the hand which are legal. \r\n        for (var i = 0; i < hand.length; ++i){\r\n          if (Math.floor(hand[i]/13) === firstCardSuit) return false\r\n        } \r\n        return true\r\n      }\r\n    }\r\n  }\r\n\r\n  // This function removes the selected card, if any, and outputs the card num of the removed card. \r\n  // TODO this function will have to be changed to communicate with the server\r\n  const handleClickSubmit = () => {\r\n    console.log(\"Calling handle Click Submit!!!!\")\r\n    var selected = -1\r\n    for (var i = 0; i < selLst.length; ++i){\r\n      if (selLst[i]) selected = i\r\n    }\r\n    console.log(\"Card \" + selected + \" is going to be deleted!\")\r\n    console.log(cardList)\r\n\r\n    if (selected === -1){\r\n      // eslint-disable-next-line no-restricted-globals\r\n      confirm(\"Please Select a Card!\")\r\n      return -1\r\n    }\r\n    else if (!checkValidCard(cardList[selected], 0, true, -1, cardList)){\r\n      // eslint-disable-next-line no-restricted-globals\r\n      confirm(\"This card is not legal to play!\")\r\n      return -1\r\n    }\r\n    else {\r\n      const cardRemoved = cardList[selected]\r\n\r\n      setCardList((prev) => {\r\n        if (prev.length === numCards){\r\n          prev.splice(selected, 1)\r\n          console.log(prev)\r\n          setNumCards((prev) =>{ return prev-1})\r\n          updateSelected(-1)\r\n          return [...prev]\r\n        }\r\n        return prev        \r\n      })\r\n      \r\n      console.log(\"End of handleClickSubmit [\" + cardList + \"] (length \" +  cardList.length + \")\")\r\n      return cardRemoved\r\n    }\r\n  }\r\n\r\n  /** The other players info. Again, this will need to be updated when you start building the server. **/\r\n  \r\n\r\n\r\n\r\n\r\n  /** PAGEBREAK return statement **/\r\n  return (\r\n    <div>\r\n      <Hand \r\n        cardLst={cardList}\r\n        selLst={selLst}\r\n        playerNum={playerNum}\r\n        handleClickCard={handleClickCard}\r\n        handleClickSubmit={handleClickSubmit}\r\n      />\r\n      <OthHand side={2} numCards={13} />\r\n      <OthHandSide side={1} numCards={5} />\r\n      <OthHandSide side={3} numCards={13} />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}